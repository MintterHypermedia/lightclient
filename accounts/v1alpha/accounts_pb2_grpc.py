# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from accounts.v1alpha import accounts_pb2 as accounts_dot_v1alpha_dot_accounts__pb2


class AccountsStub(object):
    """Accounts API service.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetAccount = channel.unary_unary(
                '/com.seed.accounts.v1alpha.Accounts/GetAccount',
                request_serializer=accounts_dot_v1alpha_dot_accounts__pb2.GetAccountRequest.SerializeToString,
                response_deserializer=accounts_dot_v1alpha_dot_accounts__pb2.Account.FromString,
                )
        self.UpdateProfile = channel.unary_unary(
                '/com.seed.accounts.v1alpha.Accounts/UpdateProfile',
                request_serializer=accounts_dot_v1alpha_dot_accounts__pb2.Profile.SerializeToString,
                response_deserializer=accounts_dot_v1alpha_dot_accounts__pb2.Account.FromString,
                )
        self.ListAccounts = channel.unary_unary(
                '/com.seed.accounts.v1alpha.Accounts/ListAccounts',
                request_serializer=accounts_dot_v1alpha_dot_accounts__pb2.ListAccountsRequest.SerializeToString,
                response_deserializer=accounts_dot_v1alpha_dot_accounts__pb2.ListAccountsResponse.FromString,
                )
        self.SetAccountTrust = channel.unary_unary(
                '/com.seed.accounts.v1alpha.Accounts/SetAccountTrust',
                request_serializer=accounts_dot_v1alpha_dot_accounts__pb2.SetAccountTrustRequest.SerializeToString,
                response_deserializer=accounts_dot_v1alpha_dot_accounts__pb2.Account.FromString,
                )


class AccountsServicer(object):
    """Accounts API service.
    """

    def GetAccount(self, request, context):
        """Lookup an Account information across the already known accounts.
        Can also be used to retrieve our own account.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateProfile(self, request, context):
        """Updates profile information of our own Account.
        Doesn't support partial updates!
        Users should call GetAccount first,
        change the necessary fields in place,
        and then send the same Profile object back to UpdateProfile.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListAccounts(self, request, context):
        """List accounts known to the backend (excluding our own account). New accounts can be discovered naturally by
        interacting with the network, or users can ask to discover specific accounts using
        the Networking API.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetAccountTrust(self, request, context):
        """Set or unset the trustness of an account. An account is untrusted by default except for our own.
        Returns the modified account.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AccountsServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAccount,
                    request_deserializer=accounts_dot_v1alpha_dot_accounts__pb2.GetAccountRequest.FromString,
                    response_serializer=accounts_dot_v1alpha_dot_accounts__pb2.Account.SerializeToString,
            ),
            'UpdateProfile': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateProfile,
                    request_deserializer=accounts_dot_v1alpha_dot_accounts__pb2.Profile.FromString,
                    response_serializer=accounts_dot_v1alpha_dot_accounts__pb2.Account.SerializeToString,
            ),
            'ListAccounts': grpc.unary_unary_rpc_method_handler(
                    servicer.ListAccounts,
                    request_deserializer=accounts_dot_v1alpha_dot_accounts__pb2.ListAccountsRequest.FromString,
                    response_serializer=accounts_dot_v1alpha_dot_accounts__pb2.ListAccountsResponse.SerializeToString,
            ),
            'SetAccountTrust': grpc.unary_unary_rpc_method_handler(
                    servicer.SetAccountTrust,
                    request_deserializer=accounts_dot_v1alpha_dot_accounts__pb2.SetAccountTrustRequest.FromString,
                    response_serializer=accounts_dot_v1alpha_dot_accounts__pb2.Account.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'com.seed.accounts.v1alpha.Accounts', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Accounts(object):
    """Accounts API service.
    """

    @staticmethod
    def GetAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.seed.accounts.v1alpha.Accounts/GetAccount',
            accounts_dot_v1alpha_dot_accounts__pb2.GetAccountRequest.SerializeToString,
            accounts_dot_v1alpha_dot_accounts__pb2.Account.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateProfile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.seed.accounts.v1alpha.Accounts/UpdateProfile',
            accounts_dot_v1alpha_dot_accounts__pb2.Profile.SerializeToString,
            accounts_dot_v1alpha_dot_accounts__pb2.Account.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListAccounts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.seed.accounts.v1alpha.Accounts/ListAccounts',
            accounts_dot_v1alpha_dot_accounts__pb2.ListAccountsRequest.SerializeToString,
            accounts_dot_v1alpha_dot_accounts__pb2.ListAccountsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetAccountTrust(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.seed.accounts.v1alpha.Accounts/SetAccountTrust',
            accounts_dot_v1alpha_dot_accounts__pb2.SetAccountTrustRequest.SerializeToString,
            accounts_dot_v1alpha_dot_accounts__pb2.Account.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
